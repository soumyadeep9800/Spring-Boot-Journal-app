<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Console appender to print logs to the console -->
    <appender name="myConsoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="myFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file> journalApp.log </file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>journalApp.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
<!--            <fileNamePattern>journalApp.%d{yy-MM-dd_HH-mm}.%i.log</fileNamePattern>--> // per minute
            <maxFileSize> 10MB </maxFileSize>
            <maxHistory> 10 </maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Set the log level for your application package -->
    <logger name="net.digest.journalAPP" level="TRACE" />

    <!-- Root logger config -->
    <root level="INFO">
        <appender-ref ref="myConsoleAppender" />
        <appender-ref ref="myFileAppender" />
    </root>

</configuration>

<!--1) <configuration>: This is the root element of the logback.xml file and encloses all other Logback configuration elements.-->
<!--It can include global settings for the entire logging context.-->

<!--2)<appender>: The <appender> element defines individual appenders, which specify where log messages should be sent.-->
<!--Logback supports various types of appenders, such as <consoleAppender>, <fileAppender>, <rollingFileAppender>,  -->
<!--and custom appenders. Each appender can have its own configuration settings.-->

<!--3)<encoder>: An alternative to specifying layouts directly within appenders, the <encoder>-->
<!-- element can be used to configure encoding of log messages. Encoders are often used with asynchronous appenders.-->
<!-- They define how log data is serialized for output.-->

<!--4) <logger>: The <logger> element is used to configure loggers, which are responsible for generating log messages.-->
<!--Loggers are typically associated with specific parts of our application’s codebase. We can configure the log level,-->
<!--appender references, and optional filters for each logger.-->

<!--5) <root>: The <root> element is a special logger that serves as the root of the logger hierarchy.-->
<!--It captures log messages that do not match any other logger’s criteria. -->
<!--it sets the default log level and can reference one or more appenders.-->


